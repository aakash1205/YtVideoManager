import json
def load_data():
    try:
        with open('youtube.txt','r') as file:
            return json.load(file)
    except FileNotFoundError:
        return []
def helper(videos):
    with open('youtube.txt','w') as file:
        json.dump(videos,file)
def list_all_videos(videos):
    print("\n")
    print("*"*70)
    for index,video in enumerate(videos,start=1):
        print(f"{index}.{video['name']},Duration : {video['time']}")
    print("\n")
    print("*"*70)
            
def add_video(videos):
    name = input("Enter the video name to be added \n")
    time = input("Enter the duration of video \n")
    videos.append({'name':name,'time':time})
    helper(videos)
    
     
def remove_video(videos):
    list_all_videos(videos)
    video=int(input("Enter video index to delete: \t"))
    if 1<=video<=len(videos):
        del videos[video-1]
    else:
        print("Invalid index entered ")
    
    
def update_video(videos):
    list_all_videos(videos)
    index=int(input("Enter the index of video to update\t"))
    if 1<= index <=len(videos):
        name=input("Enter the new name of video to update\t")
        time=input("Enter the duration of video\t")
        videos[index-1]={'name':name,'time': time}
        helper(videos)
    else:
        print("Invalid index selected")        
    
def main():
    videos=load_data()
    while True:
        print("Select an option\n")
        print("1. List all of the videos \n")
        print("2. Add a Video \n")
        print("3. Remove a video \n")
        print("4. Update a video \n")
        print("5. Exit the app\n")
        choice =input("Enter your input: \n")       
        match choice:
            case '1':
                list_all_videos(videos)
            case '2':
                add_video(videos)
            case '3':
                remove_video(videos)
            case '4':
                update_video(videos)
            case '5':
                break
            case _:
                print("Invalid choice\n")
if __name__ =="__main__":
    main()
                
            
            
            
                
        
        
        
        